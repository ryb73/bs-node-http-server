State 0:
entry' -> . entry [ # ]
-- On TERMINAL shift to state 1
-- On NONTERMINAL shift to state 3
-- On COMMENT shift to state 7
-- On terminals shift to state 8
-- On sentence shift to state 10
-- On located_sentences_or_comments shift to state 14
-- On located_sentence shift to state 12
-- On entry shift to state 16
-- On EOL reduce production terminals -> 
-- On EOF reduce production located_sentences_or_comments -> 

State 1:
terminals -> TERMINAL . terminals [ EOL ]
-- On TERMINAL shift to state 1
-- On terminals shift to state 2
-- On EOL reduce production terminals -> 

State 2:
terminals -> TERMINAL terminals . [ EOL ]
-- On EOL reduce production terminals -> TERMINAL terminals 

State 3:
sentence -> NONTERMINAL . COLON terminals EOL [ TERMINAL NONTERMINAL EOL EOF COMMENT ]
-- On COLON shift to state 4

State 4:
sentence -> NONTERMINAL COLON . terminals EOL [ TERMINAL NONTERMINAL EOL EOF COMMENT ]
-- On TERMINAL shift to state 1
-- On terminals shift to state 5
-- On EOL reduce production terminals -> 

State 5:
sentence -> NONTERMINAL COLON terminals . EOL [ TERMINAL NONTERMINAL EOL EOF COMMENT ]
-- On EOL shift to state 6

State 6:
sentence -> NONTERMINAL COLON terminals EOL . [ TERMINAL NONTERMINAL EOL EOF COMMENT ]
-- On TERMINAL reduce production sentence -> NONTERMINAL COLON terminals EOL 
-- On NONTERMINAL reduce production sentence -> NONTERMINAL COLON terminals EOL 
-- On EOL reduce production sentence -> NONTERMINAL COLON terminals EOL 
-- On EOF reduce production sentence -> NONTERMINAL COLON terminals EOL 
-- On COMMENT reduce production sentence -> NONTERMINAL COLON terminals EOL 

State 7:
located_sentences_or_comments -> COMMENT . located_sentences_or_comments [ EOF ]
-- On TERMINAL shift to state 1
-- On NONTERMINAL shift to state 3
-- On COMMENT shift to state 7
-- On terminals shift to state 8
-- On sentence shift to state 10
-- On located_sentences_or_comments shift to state 11
-- On located_sentence shift to state 12
-- On EOL reduce production terminals -> 
-- On EOF reduce production located_sentences_or_comments -> 

State 8:
sentence -> terminals . EOL [ TERMINAL NONTERMINAL EOL EOF COMMENT ]
-- On EOL shift to state 9

State 9:
sentence -> terminals EOL . [ TERMINAL NONTERMINAL EOL EOF COMMENT ]
-- On TERMINAL reduce production sentence -> terminals EOL 
-- On NONTERMINAL reduce production sentence -> terminals EOL 
-- On EOL reduce production sentence -> terminals EOL 
-- On EOF reduce production sentence -> terminals EOL 
-- On COMMENT reduce production sentence -> terminals EOL 

State 10:
located_sentence -> sentence . [ TERMINAL NONTERMINAL EOL EOF COMMENT ]
-- On TERMINAL reduce production located_sentence -> sentence 
-- On NONTERMINAL reduce production located_sentence -> sentence 
-- On EOL reduce production located_sentence -> sentence 
-- On EOF reduce production located_sentence -> sentence 
-- On COMMENT reduce production located_sentence -> sentence 

State 11:
located_sentences_or_comments -> COMMENT located_sentences_or_comments . [ EOF ]
-- On EOF reduce production located_sentences_or_comments -> COMMENT located_sentences_or_comments 

State 12:
located_sentences_or_comments -> located_sentence . located_sentences_or_comments [ EOF ]
-- On TERMINAL shift to state 1
-- On NONTERMINAL shift to state 3
-- On COMMENT shift to state 7
-- On terminals shift to state 8
-- On sentence shift to state 10
-- On located_sentences_or_comments shift to state 13
-- On located_sentence shift to state 12
-- On EOL reduce production terminals -> 
-- On EOF reduce production located_sentences_or_comments -> 

State 13:
located_sentences_or_comments -> located_sentence located_sentences_or_comments . [ EOF ]
-- On EOF reduce production located_sentences_or_comments -> located_sentence located_sentences_or_comments 

State 14:
entry -> located_sentences_or_comments . EOF [ # ]
-- On EOF shift to state 15

State 15:
entry -> located_sentences_or_comments EOF . [ # ]
-- On # reduce production entry -> located_sentences_or_comments EOF 

State 16:
entry' -> entry . [ # ]
-- On # accept entry

State 17:
optional_sentence' -> . optional_sentence [ # ]
-- On TERMINAL shift to state 1
-- On NONTERMINAL shift to state 18
-- On EOF shift to state 22
-- On terminals shift to state 23
-- On sentence shift to state 25
-- On optional_sentence shift to state 26
-- On EOL reduce production terminals -> 

State 18:
sentence -> NONTERMINAL . COLON terminals EOL [ # ]
-- On COLON shift to state 19

State 19:
sentence -> NONTERMINAL COLON . terminals EOL [ # ]
-- On TERMINAL shift to state 1
-- On terminals shift to state 20
-- On EOL reduce production terminals -> 

State 20:
sentence -> NONTERMINAL COLON terminals . EOL [ # ]
-- On EOL shift to state 21

State 21:
sentence -> NONTERMINAL COLON terminals EOL . [ # ]
-- On # reduce production sentence -> NONTERMINAL COLON terminals EOL 

State 22:
optional_sentence -> EOF . [ # ]
-- On # reduce production optional_sentence -> EOF 

State 23:
sentence -> terminals . EOL [ # ]
-- On EOL shift to state 24

State 24:
sentence -> terminals EOL . [ # ]
-- On # reduce production sentence -> terminals EOL 

State 25:
optional_sentence -> sentence . [ # ]
-- On # reduce production optional_sentence -> sentence 

State 26:
optional_sentence' -> optional_sentence . [ # ]
-- On # accept optional_sentence

