{
  "_args": [
    [
      {
        "raw": "ocaml@git+https://github.com/npm-opam/ocaml.git#npm-4.02.3",
        "scope": null,
        "escapedName": "ocaml",
        "name": "ocaml",
        "rawSpec": "git+https://github.com/npm-opam/ocaml.git#npm-4.02.3",
        "spec": "git+https://github.com/npm-opam/ocaml.git#npm-4.02.3",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:npm-opam/ocaml.git#npm-4.02.3",
          "sshUrl": "git+ssh://git@github.com/npm-opam/ocaml.git#npm-4.02.3",
          "httpsUrl": "git+https://github.com/npm-opam/ocaml.git#npm-4.02.3",
          "gitUrl": "git://github.com/npm-opam/ocaml.git#npm-4.02.3",
          "shortcut": "github:npm-opam/ocaml#npm-4.02.3",
          "directUrl": "https://raw.githubusercontent.com/npm-opam/ocaml/npm-4.02.3/package.json"
        }
      },
      "/Users/ryan/Personal/proj/bs-node-http-server/node_modules/@opam-alpha/ocaml"
    ]
  ],
  "_from": "git+https://github.com/npm-opam/ocaml.git#0bb98be8e5233a02282ed8de0c8965677ddbde33",
  "_id": "ocaml@4.2.3",
  "_inCache": true,
  "_location": "/ocaml",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ocaml@git+https://github.com/npm-opam/ocaml.git#npm-4.02.3",
    "scope": null,
    "escapedName": "ocaml",
    "name": "ocaml",
    "rawSpec": "git+https://github.com/npm-opam/ocaml.git#npm-4.02.3",
    "spec": "git+https://github.com/npm-opam/ocaml.git#npm-4.02.3",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:npm-opam/ocaml.git#npm-4.02.3",
      "sshUrl": "git+ssh://git@github.com/npm-opam/ocaml.git#npm-4.02.3",
      "httpsUrl": "git+https://github.com/npm-opam/ocaml.git#npm-4.02.3",
      "gitUrl": "git://github.com/npm-opam/ocaml.git#npm-4.02.3",
      "shortcut": "github:npm-opam/ocaml#npm-4.02.3",
      "directUrl": "https://raw.githubusercontent.com/npm-opam/ocaml/npm-4.02.3/package.json"
    }
  },
  "_requiredBy": [
    "/@opam-alpha/ocaml"
  ],
  "_resolved": "git+https://github.com/npm-opam/ocaml.git#0bb98be8e5233a02282ed8de0c8965677ddbde33",
  "_shasum": "35ebcd5f362761b47840db40e0b64fa5fd960cde",
  "_shrinkwrap": null,
  "_spec": "ocaml@git+https://github.com/npm-opam/ocaml.git#npm-4.02.3",
  "_where": "/Users/ryan/Personal/proj/bs-node-http-server/node_modules/@opam-alpha/ocaml",
  "author": "",
  "bugs": {
    "url": "https://github.com/npm-ml/ocaml/issues"
  },
  "dependencies": {},
  "description": "OCaml Compiler as an Npm Package",
  "devDependencies": {},
  "exportedEnvVars": {
    "OCAML__SOME_VAR": {
      "val": "see how this must be prefixed by OCAML__ because the package name is ocaml, and this wasnt marked global:true",
      "resolveAsRelativePath": false
    },
    "OCAMLLIB": {
      "val": "./lib/ocaml",
      "resolveAsRelativePath": true,
      "global": true,
      "globalCollisionBehavior": "fail"
    },
    "OCAMLPARAM": {
      "global": true,
      "globalCollisionBehavior": "fail",
      "val": "_,g=1"
    },
    "PATH": {
      "val": "./bin",
      "resolveAsRelativePath": true,
      "global": true,
      "globalCollisionBehavior": "joinPath"
    },
    "CHECK_IF_PREINSTALLED": {
      "val": "false",
      "global": true
    },
    "OCAML_TOPLEVEL_PATH": {
      "val": "./lib/ocaml",
      "global": true,
      "resolveAsRelativePath": true,
      "globalCollisionBehavior": "clobber"
    }
  },
  "gitHead": "0bb98be8e5233a02282ed8de0c8965677ddbde33",
  "homepage": "https://github.com/npm-ml/ocaml#readme",
  "keywords": [
    "ocaml",
    "flow",
    "opam"
  ],
  "license": "QPL - See LICENSE at https://github.com/ocaml/ocaml",
  "maintainers": [
    {
      "name": "npm-ml",
      "email": "jordojw@gmail.com"
    }
  ],
  "name": "ocaml",
  "optionalDependencies": {},
  "personal-workflow-for-committing-force-pushing": "git add package.json && git commit --amend --no-edit && git tag -d npm-4.02.3 && git tag npm-4.02.3 && git push -f upstream HEAD:create4_02_3_with_packageJson && git push -f upstream --tags",
  "readme": "OVERVIEW:\n\nOCaml is an implementation of the ML language, based on the Caml Light\ndialect extended with a complete class-based object system and a\npowerful module system in the style of Standard ML.\n\nOCaml comprises two compilers. One generates bytecode which is then\ninterpreted by a C program. This compiler runs quickly, generates\ncompact code with moderate memory requirements, and is portable to\nessentially any 32 or 64 bit Unix platform. Performance of generated\nprograms is quite good for a bytecoded implementation.  This compiler\ncan be used either as a standalone, batch-oriented compiler that\nproduces standalone programs, or as an interactive, toplevel-based\nsystem.\n\nThe other compiler generates high-performance native code for a number\nof processors. Compilation takes longer and generates bigger code, but\nthe generated programs deliver excellent performance, while retaining\nthe moderate memory requirements of the bytecode compiler. The\nnative-code compiler currently runs on the following platforms:\n\nTier 1 (actively used and maintained by the core OCaml team):\n\n    AMD64 (Opteron)    Linux, MacOS X, MS Windows\n    IA32 (Pentium)     Linux, FreeBSD, MacOS X, MS Windows\n    PowerPC            Linux, MacOS X\n    ARM                Linux\n\nTier 2 (maintained when possible, with help from users):\n\n    AMD64              FreeBSD, OpenBSD\n    IA32 (Pentium)     NetBSD, OpenBSD, Solaris 9\n    PowerPC            NetBSD\n    SPARC              Solaris, Linux, NetBSD\n\nOther operating systems for the processors above have not been tested,\nbut the compiler may work under other operating systems with little work.\n\nBefore the introduction of objects, OCaml was known as Caml Special\nLight. OCaml is almost upwards compatible with Caml Special Light,\nexcept for a few additional reserved keywords that have forced some\nrenaming of standard library functions.\n\nCONTENTS:\n\n  Changes               what's new with each release\n  INSTALL               instructions for installation\n  LICENSE               license and copyright notice\n  Makefile              main Makefile\n  README                this file\n  README.win32          infos on the MS Windows ports of OCaml\n  asmcomp/              native-code compiler and linker\n  asmrun/               native-code runtime library\n  boot/                 bootstrap compiler\n  bytecomp/             bytecode compiler and linker\n  byterun/              bytecode interpreter and runtime system\n  config/               autoconfiguration stuff\n  debugger/             source-level replay debugger\n  driver/               driver code for the compilers\n  emacs/                OCaml editing mode and debugger interface for GNU Emacs\n  lex/                  lexer generator\n  maccaml/              the Macintosh GUI\n  ocamldoc/             documentation generator\n  otherlibs/            several external libraries\n  parsing/              syntax analysis\n  stdlib/               standard library\n  tools/                various utilities\n  toplevel/             interactive system\n  typing/               typechecking\n  utils/                utility libraries\n  yacc/                 parser generator\n\nCOPYRIGHT:\n\nAll files marked \"Copyright INRIA\" in this distribution are copyright\n1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,\n2007, 2008, 2009, 2010, 2011, 2012 Institut National de Recherche en\nInformatique et en Automatique (INRIA) and distributed under the\nconditions stated in file LICENSE.\n\nINSTALLATION:\n\nSee the file INSTALL for installation instructions on Unix, Linux and\nMacOS X machines.  For MS Windows, see README.win32.\n\nDOCUMENTATION:\n\nThe OCaml manual is distributed in HTML, PDF, Postscript, DVI, and\nEmacs Info files.  It is available on the World Wide Web, at\n\n        http://caml.inria.fr/\n\nAVAILABILITY:\n\nThe complete OCaml distribution can be accessed at\n\n        http://caml.inria.fr/\n\nKEEPING IN TOUCH WITH THE CAML COMMUNITY:\n\nThere exists a mailing list of users of the OCaml implementations\ndeveloped at INRIA. The purpose of this list is to share\nexperience, exchange ideas (and even code), and report on applications\nof the OCaml language. Messages can be written in English or in\nFrench. The list has more than 1000 subscribers.\n\nMessages to the list should be sent to:\n\n              caml-list@inria.fr\n\nYou can subscribe to this list via the Web interface at\n\n        https://sympa-roc.inria.fr/wws/info/caml-list\n\nArchives of the list are available on the Web site above.\n\nThe Usenet news groups comp.lang.ml and comp.lang.functional\nalso contains discussions about the ML family of programming languages,\nincluding OCaml.\n\nBUG REPORTS AND USER FEEDBACK:\n\nPlease report bugs using the Web interface to the bug-tracking system\nat http://caml.inria.fr/bin/caml-bugs\n\nTo be effective, bug reports should include a complete program\n(preferably small) that exhibits the unexpected behavior, and the\nconfiguration you are using (machine type, etc).\n\nYou can also contact the implementors directly at caml@inria.fr.\n",
  "readmeFilename": "README",
  "repository": {
    "type": "git",
    "url": "git://github.com/npm-ml/ocaml.git"
  },
  "scripts": {
    "postinstall": "./yarn-install-project.sh"
  },
  "version": "4.2.3"
}
