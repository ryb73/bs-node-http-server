{
  "_args": [
    [
      {
        "raw": "re-actual@git://github.com/npm-opam/re.git#1.7.1",
        "scope": null,
        "escapedName": "re-actual",
        "name": "re-actual",
        "rawSpec": "git://github.com/npm-opam/re.git#1.7.1",
        "spec": "git://github.com/npm-opam/re.git#1.7.1",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:npm-opam/re.git#1.7.1",
          "sshUrl": "git+ssh://git@github.com/npm-opam/re.git#1.7.1",
          "httpsUrl": "git+https://github.com/npm-opam/re.git#1.7.1",
          "gitUrl": "git://github.com/npm-opam/re.git#1.7.1",
          "shortcut": "github:npm-opam/re#1.7.1",
          "directUrl": "https://raw.githubusercontent.com/npm-opam/re/1.7.1/package.json"
        }
      },
      "/Users/ryan/Personal/proj/bs-node-http-server/node_modules/@opam-alpha/re"
    ]
  ],
  "_from": "git://github.com/npm-opam/re.git#42b8753253512c7c3d00af042fd73f6c3b757ef8",
  "_id": "re-actual@1.7.1",
  "_inCache": true,
  "_location": "/re-actual",
  "_phantomChildren": {},
  "_requested": {
    "raw": "re-actual@git://github.com/npm-opam/re.git#1.7.1",
    "scope": null,
    "escapedName": "re-actual",
    "name": "re-actual",
    "rawSpec": "git://github.com/npm-opam/re.git#1.7.1",
    "spec": "git://github.com/npm-opam/re.git#1.7.1",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:npm-opam/re.git#1.7.1",
      "sshUrl": "git+ssh://git@github.com/npm-opam/re.git#1.7.1",
      "httpsUrl": "git+https://github.com/npm-opam/re.git#1.7.1",
      "gitUrl": "git://github.com/npm-opam/re.git#1.7.1",
      "shortcut": "github:npm-opam/re#1.7.1",
      "directUrl": "https://raw.githubusercontent.com/npm-opam/re/1.7.1/package.json"
    }
  },
  "_requiredBy": [
    "/@opam-alpha/re"
  ],
  "_resolved": "git://github.com/npm-opam/re.git#42b8753253512c7c3d00af042fd73f6c3b757ef8",
  "_shasum": "be73f545c2ea6db79a4edc456adf9e3a9a7b3046",
  "_shrinkwrap": null,
  "_spec": "re-actual@git://github.com/npm-opam/re.git#1.7.1",
  "_where": "/Users/ryan/Personal/proj/bs-node-http-server/node_modules/@opam-alpha/re",
  "dependencies": {
    "@opam-alpha/ocamlbuild": "*",
    "@opam-alpha/ocamlfind": "*",
    "dependency-env": "*",
    "nopam": "*",
    "opam-installer-bin": "git+https://github.com/yunxing/opam-installer-bin.git",
    "substs": "git+https://github.com/yunxing/substs.git"
  },
  "description": "Description ===========",
  "devDependencies": {},
  "exportedEnvVars": {
    "CAML_LD_LIBRARY_PATH": {
      "global": true,
      "resolveAsRelativePath": true,
      "globalCollisionBehavior": "joinPath",
      "val": "./_build/ocamlfind/lib/stublibs"
    },
    "re_version": {
      "global": true,
      "globalCollisionBehavior": "clobber",
      "val": "1.7.1"
    },
    "FINDLIB": {
      "global": true,
      "resolveAsRelativePath": true,
      "globalCollisionBehavior": "joinPath",
      "val": "./_build/ocamlfind/lib"
    },
    "re_enable": {
      "global": true,
      "globalCollisionBehavior": "clobber",
      "val": "enable"
    },
    "version": {
      "global": true,
      "globalCollisionBehavior": "clobber",
      "val": "1.7.1"
    },
    "re_installed": {
      "global": true,
      "globalCollisionBehavior": "clobber",
      "val": "true"
    },
    "PATH": {
      "global": true,
      "resolveAsRelativePath": true,
      "globalCollisionBehavior": "joinPath",
      "val": "./_build/ocamlfind/bin"
    }
  },
  "gitHead": "42b8753253512c7c3d00af042fd73f6c3b757ef8",
  "name": "re-actual",
  "optionalDependencies": {},
  "peerDependencies": {
    "@opam-alpha/ocaml": ">= 4.2.3"
  },
  "readme": "Description\n===========\n\nRe is a regular expression library for OCaml.\n[![Build Status](https://travis-ci.org/ocaml/ocaml-re.svg?branch=master)](https://travis-ci.org/ocaml/ocaml-re)\n\nContact\n=======\n\nThis library has been written by Jerome Vouillon\n(Jerome.Vouillon@pps.univ-paris-diderot.fr).\nIt can be downloaded from <https://github.com/ocaml/ocaml-re>\n\nBug reports, suggestions and contributions are welcome.\n\nFeatures\n========\n\nThe following styles of regular expressions are supported:\n- Perl-style regular expressions (module `Re_perl`);\n- Posix extended regular expressions (module `Re_posix`);\n- Emacs-style regular expressions (module `Re_emacs`);\n- Shell-style file globbing (module `Re_glob`).\n\nIt is also possible to build regular expressions by combining simpler\nregular expressions (module `Re`).\n\nThe most notable missing features are **back-references** and\nlook-ahead/look-behind **assertions**.\n\nThere is also a subset of the PCRE interface available in the\n`Re.pcre` library. This makes it easier to port code from that\nlibrary to Re without any changes beyond replacing the `pcre`\nfindlib package with `re.pcre`.\n\nPerformances\n============\n\nThe matches are performed by lazily building a DFA (deterministic\nfinite automaton) from the regular expression. As a consequence,\nmatching takes linear time in the length of the matched string.\n\nThe compilation of patterns is slower than with libraries using\nback-tracking, such as PCRE.  But, once a large enough part of the\nDFA is built, matching is extremely fast.\n\nOf course, for some combinations of regular expression and string, the\npart of the DFA that needs to be build is so large that this point is\nnever reached, and matching will be slow.  This is not expected to\nhappen often in practice, and actually a lot of expressions that\nbehaves badly with a backtracking implementation are very efficient\nwith this implementation.\n\nThe library is at the moment entirely written in OCaml.  As a\nconsequence, regular expression matching is much slower when the\nlibrary is compiled to bytecode than when it is compiled to native\ncode.\n\nHere are some timing results (Pentium III 500Mhz):\n* Scanning a 1Mb string containing only `a`s, except for the last\n  character which is a `b`, searching for the pattern `aa?b`\n  (repeated 100 times):\n    - RE: 2.6s\n    - PCRE: 68s\n* Regular expression example from http://www.bagley.org/~doug/shootout/ [1]\n    - RE: 0.43s\n    - PCRE: 3.68s\n\n  [1] this page is no longer up but is available via the Internet Archive \n  http://web.archive.org/web/20010429190941/http://www.bagley.org/~doug/shootout/bench/regexmatch/\n\n* The large regular expression (about 2000 characters long) that\n  Unison uses with my preference file to decide whether a file should\n  be ignored or not.  This expression is matched against a filename\n  about 20000 times.\n    - RE: 0.31s\n    - PCRE: 3.7s\n  However, RE is only faster than PCRE when there are more than about\n  300 filenames.\n",
  "readmeFilename": "README.md",
  "scripts": {
    "postinstall": "eval $(dependencyEnv) && nopam && ocaml setup.ml -configure --prefix $opam_prefix && ocaml setup.ml -build && ocaml setup.ml -install && (opam-installer --prefix=$opam_prefix || true)"
  },
  "version": "1.7.1"
}
