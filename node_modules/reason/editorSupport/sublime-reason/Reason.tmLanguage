<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>re</string>
		<string>rei</string>
	</array>
	<key>foldingStartMarker</key>
	<string>^.*\bfun\s*(\w+\s*)?\([^\)]*\)(\s*\{[^\}]*)?\s*$</string>
	<key>foldingStopMarker</key>
	<string>^\s*\}</string>
	<key>name</key>
	<string>Reason</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#reason_comment_doc_block</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#reason_comment_block</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#reason_named_arg</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#reason_module</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#reason_lifetime</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#reason_self</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#reason_string</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#reason_raw_string</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\'([^\'\\]|\\(x\h{2}|u\{\h{1,6}\}|.))\'</string>
			<key>name</key>
			<string>string.quoted.single.source.reason</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.source.reason</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.source.reason</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(fun)\s+([a-zA-Z_][a-zA-Z0-9_]?[\w\:,+ \'&lt;&gt;?]*)\s*(?:\()</string>
			<key>name</key>
			<string>meta.function.source.reason</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.source.reason</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.source.reason</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.source.reason</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.other.reason</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>storage.type.source.reason</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.reason</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>This matches the 'let x = val' style of variable intitialization.</string>
			<key>match</key>
			<string>(let|and)\s+(module\s+)(rec\s+)?([[:alpha:]_][[:alnum:]_]*)\s*(:[^=]*)?(=?)</string>
			<key>name</key>
			<string>meta.initialization.reason</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.source.reason</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.source.reason</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.type.source.reason</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.reason</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>This matches the 'let x = val' style of variable intitialization.</string>
			<key>match</key>
			<string>(let)\s+(rec\s+)?([[:alpha:]_][[:alnum:]_]*)\s*(:[^=]*)?(=?)</string>
			<key>name</key>
			<string>meta.initialization.reason</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.source.reason</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(extern\s+crate)\s+(\w+)</string>
			<key>name</key>
			<string>meta.import.reason</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.source.reason</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.macro.source.reason</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(macro_rules!)\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*(?:\{)</string>
			<key>name</key>
			<string>meta.macro.source.reason</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(as|box|break|claim|const|continue|copy|Copy|crate|do|drop|then|else|extern|for|if|impl|in|let|and|loop|switch|fun|open|include|mod|move|mutable|Owned|priv|pub|pure|ref|return|unsafe|use|while|mod|Send|static|trait|struct|enum|exception|type|module|rec|where)\b</string>
			<key>name</key>
			<string>keyword.source.reason</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(Self|m32|m64|m128|f80|f16|f128|int|uint|isize|usize|float|char|bool|u8|u16|u32|u64|f32|f64|i8|i16|i32|i64|str|Option|Either|c_float|c_double|c_void|FILE|fpos_t|DIR|dirent|c_char|c_schar|c_uchar|c_short|c_ushort|c_int|c_uint|c_long|c_ulong|size_t|ptrdiff_t|clock_t|time_t|c_longlong|c_ulonglong|intptr_t|uintptr_t|off_t|dev_t|ino_t|pid_t|mode_t|ssize_t)\b</string>
			<key>name</key>
			<string>storage.type.source.reason</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bself\b</string>
			<key>name</key>
			<string>variable.language.source.reason</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(true|false|Some|None|Ok|Err)\b</string>
			<key>name</key>
			<string>constant.language.source.reason</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(EXIT_FAILURE|EXIT_SUCCESS|RAND_MAX|EOF|SEEK_SET|SEEK_CUR|SEEK_END|_IOFBF|_IONBF|_IOLBF|BUFSIZ|FOPEN_MAX|FILENAME_MAX|L_tmpnam|TMP_MAX|O_RDONLY|O_WRONLY|O_RDWR|O_APPEND|O_CREAT|O_EXCL|O_TRUNC|S_IFIFO|S_IFCHR|S_IFBLK|S_IFDIR|S_IFREG|S_IFMT|S_IEXEC|S_IWRITE|S_IREAD|S_IRWXU|S_IXUSR|S_IWUSR|S_IRUSR|F_OK|R_OK|W_OK|X_OK|STDIN_FILENO|STDOUT_FILENO|STDERR_FILENO)\b</string>
			<key>name</key>
			<string>support.constant.source.reason</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>#!?\[</string>
			<key>end</key>
			<string>\]</string>
			<key>name</key>
			<string>comment.block.attribute.reason</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#reason_string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#reason_raw_string</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(([0-9][0-9_]*)|([0-9][0-9_]*(usize|u8|u16|u32|u64))|([0-9][0-9_]*(isize|i8|i16|i32|i64)))\b</string>
			<key>name</key>
			<string>constant.numeric.integer.source.reason</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0x[a-fA-F0-9_]+)|(0x[a-fA-F0-9_]+(usize|u8|u16|u32|u64))|(0x[a-fA-F0-9_]+(isize|i8|i16|i32|i64)))\b</string>
			<key>name</key>
			<string>constant.numeric.hex.source.reason</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0b[01_]+)|(0b[01_]+(usize|u8|u16|u32|u64))|(0b[01_]+(isize|i8|i16|i32|i64)))\b</string>
			<key>name</key>
			<string>constant.numeric.binary.source.reason</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(([0-9][0-9_]*(f32|f64|f))|([0-9][0-9_]*([eE][+-]=[0-9_]+))|([0-9][0-9_]*([eE][+-]=[0-9_]+)(f32|f64|f))|([0-9][0-9_]*\.[0-9_]+)|([0-9][0-9_]*\.[0-9_]+(f32|f64|f))|([0-9][0-9_]*\.[0-9_]+%([eE][+-]=[0-9_]+))|([0-9][0-9_]*\.[0-9_]+%([eE][+-]=[0-9_]+)(f32|f64|f)))\b</string>
			<key>name</key>
			<string>constant.numeric.float.source.reason</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(=&gt;)|(-&gt;)|[-:=*,!.+|%/&amp;~@&lt;&gt;;]</string>
			<key>name</key>
			<string>keyword.operator.reason</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b_\b</string>
			<key>name</key>
			<string>support.function.reason</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(\w+)\b(?=\()</string>
			<key>name</key>
			<string>support.function.reason</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(\w+!)(?=\()</string>
			<key>name</key>
			<string>support.macro.reason</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(\w+)::</string>
			<key>name</key>
			<string>meta.namespace-block.reason</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.preprocessor.reason</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(\w+!)\s*[({\[]</string>
			<key>name</key>
			<string>meta.macro.source.reason</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\[|\]|{|}|\(|\))</string>
			<key>name</key>
			<string>punctuation.definition.bracket.reason</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(Box|Vec|StrBuf|Path|Option|Result|Reader|Writer|Stream|Seek|Buffer|IoError|IoResult|Sender|SyncSender|Receiver|Cell|RefCell|Any)\b</string>
			<key>name</key>
			<string>support.class.std.source.reason</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(Send|Sized|Copy|Share)\b</string>
			<key>name</key>
			<string>support.type.kind.source.reason</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bbox\b</string>
			<key>name</key>
			<string>storage.modifier.box.source.reason</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\brec\b</string>
			<key>name</key>
			<string>storage.modifier.rec.source.reason</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bmodule\b</string>
			<key>name</key>
			<string>storage.modifier.module.source.reason</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>reason_comment_block</key>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.source.reason</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#reason_comment_block</string>
				</dict>
			</array>
		</dict>
		<key>reason_comment_doc_block</key>
		<dict>
			<key>begin</key>
			<string>/\*[!\*][^\*]</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.documentation.source.reason</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#reason_comment_doc_block</string>
				</dict>
			</array>
		</dict>
		<key>reason_escaped_character</key>
		<dict>
			<key>match</key>
			<string>\\(x\h{2}|u\{\h{1,6}\}|.)</string>
			<key>name</key>
			<string>constant.character.escape.source.reason</string>
		</dict>
		<key>reason_lifetime</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.lifetime.source.reason</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\'([a-zA-Z_][a-zA-Z0-9_]*)(?!\')\b</string>
			<key>name</key>
			<string>storage.modifier.lifetime.source.reason</string>
		</dict>
		<key>reason_module</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.other.reason</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b([A-Z][a-zA-Z0-9_]*)\b</string>
		</dict>
		<key>reason_named_arg</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.lifetime.source.reason</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.lifetime.source.reason</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(@([a-zA-Z_][a-zA-Z0-9_]*))\b</string>
		</dict>
		<key>reason_raw_string</key>
		<dict>
			<key>begin</key>
			<string>r(#*)"</string>
			<key>end</key>
			<string>"(\1)</string>
			<key>name</key>
			<string>string.quoted.double.raw.source.reason</string>
		</dict>
		<key>reason_self</key>
		<dict>
			<key>match</key>
			<string>\bself\b</string>
			<key>name</key>
			<string>variable.language.source.reason</string>
		</dict>
		<key>reason_string</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.source.reason</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#reason_escaped_character</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.reason</string>
	<key>uuid</key>
	<string>4339386b-4d67-4f0e-9e78-09ecbcddf71d</string>
</dict>
</plist>
