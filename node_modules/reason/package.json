{
  "_args": [
    [
      {
        "raw": "reason@^1.9.0",
        "scope": null,
        "escapedName": "reason",
        "name": "reason",
        "rawSpec": "^1.9.0",
        "spec": ">=1.9.0 <2.0.0",
        "type": "range"
      },
      "/Users/ryan/Personal/proj/bs-node-http-server/node_modules/ocamlBetterErrors"
    ]
  ],
  "_from": "reason@>=1.9.0 <2.0.0",
  "_id": "reason@1.13.0",
  "_inCache": true,
  "_location": "/reason",
  "_nodeVersion": "6.6.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/reason-1.13.0.tgz_1490229514844_0.19130592374131083"
  },
  "_npmUser": {
    "name": "opam-alpha",
    "email": "nov503@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "reason@^1.9.0",
    "scope": null,
    "escapedName": "reason",
    "name": "reason",
    "rawSpec": "^1.9.0",
    "spec": ">=1.9.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/ocamlBetterErrors"
  ],
  "_resolved": "https://registry.npmjs.org/reason/-/reason-1.13.0.tgz",
  "_shasum": "42b0631a590a67c7ffebd67741d2d0f5c0c65cc2",
  "_shrinkwrap": null,
  "_spec": "reason@^1.9.0",
  "_where": "/Users/ryan/Personal/proj/bs-node-http-server/node_modules/ocamlBetterErrors",
  "bugs": {
    "url": "https://github.com/facebook/reason/issues"
  },
  "dependencies": {
    "@opam-alpha/menhir": ">= 20160303.0.0",
    "@opam-alpha/merlin-extend": "^ 0.3.0",
    "@opam-alpha/ocaml": "4.2.3",
    "@opam-alpha/ocaml-migrate-parsetree": "*",
    "@opam-alpha/ocamlfind": "*",
    "@opam-alpha/reason-parser": "1.13.0",
    "@opam-alpha/result": "*",
    "@opam-alpha/topkg": "0.8.1",
    "dependency-env": "*",
    "nopam": "*",
    "opam-installer-bin": "git+https://github.com/yunxing/opam-installer-bin.git",
    "utop-bin": "git+https://github.com/reasonml/utop-bin.git"
  },
  "description": "Friendly Syntax & Toolchain Powered by OCaml",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "42b0631a590a67c7ffebd67741d2d0f5c0c65cc2",
    "tarball": "https://registry.npmjs.org/reason/-/reason-1.13.0.tgz"
  },
  "engines": {
    "npm": ">=3.10.0"
  },
  "exportedEnvVars": {
    "reason_installed": {
      "global": true,
      "globalCollisionBehavior": "clobber",
      "val": "true"
    },
    "FINDLIB": {
      "global": true,
      "resolveAsRelativePath": true,
      "globalCollisionBehavior": "joinPath",
      "val": "./_build/ocamlfind/lib"
    },
    "version": {
      "val": "1.13.0",
      "global": true,
      "globalCollisionBehavior": "clobber"
    },
    "PATH": {
      "global": true,
      "resolveAsRelativePath": true,
      "globalCollisionBehavior": "joinPath",
      "val": "./_build/ocamlfind/bin"
    },
    "reason_enable": {
      "global": true,
      "globalCollisionBehavior": "clobber",
      "val": "enable"
    },
    "reason_version": {
      "global": true,
      "globalCollisionBehavior": "clobber",
      "val": "1.13.0"
    }
  },
  "gitHead": "c6f0f4a38e4929b44bd13b05837d61de1537d63f",
  "homepage": "https://github.com/facebook/reason",
  "keywords": [
    "reason"
  ],
  "license": "BSD",
  "maintainers": [
    {
      "name": "chenglou",
      "email": "chenglou92@gmail.com"
    },
    {
      "name": "jordwalke",
      "email": "jordojw@gmail.com"
    },
    {
      "name": "opam-alpha",
      "email": "nov503@gmail.com"
    },
    {
      "name": "tekknolagi",
      "email": "npm@bernsteinbear.com"
    },
    {
      "name": "yunxing",
      "email": "nov503@gmail.com"
    }
  ],
  "name": "reason",
  "optionalDependencies": {},
  "readme": "\n\n\nReason: Build Systems Rapidly [![Build Status](https://travis-ci.org/facebook/reason.svg?branch=master)](https://travis-ci.org/facebook/reason) [![CircleCI](https://circleci.com/gh/facebook/reason/tree/master.svg?style=svg)](https://circleci.com/gh/facebook/reason/tree/master)\n=========================================\n\n\n- Approachable syntax.\n- Powerful, automatic source code formatting.\n- Adopt incrementally with `JavaScript/C` interop.\n- Ahead-of-time compilation to assembly - without a language level VM.\n- Rapidly develop and share projects.\n\nInstall Via `npm`\n----------------\n`npm` version > 3.0 is required - [install here](https://nodejs.org/en/download/current/).\n\n#### Reason Project\n\nInstalling the [`ReasonProject`](https://reasonml.github.io/ReasonProject/) starter kit using `npm` is the easiest way to get started with `Reason`. It will install the `master` `Reason` branch and all of the dependencies for you into a local directory based sandbox. It even includes the compiler, IDE support, and REPL. Simply delete the directory when you're done and it's gone from your computer.\n\n```\ngit clone https://github.com/reasonml/ReasonProject.git\ncd ReasonProject\nnpm install\nnpm start\n```\n\nWhile it's installing, read about [how to use ReasonProject](https://reasonml.github.io/ReasonProject/) to compile your simple project and use its built-in editor support and top level.\n\nRebel\n-----\nThe `ReasonProject` uses a very simple build system called `rebuild` that comes with `Reason`, and is enough to start a small project. For large-scale development, we are currently developing a build and namespacing workflow called [`rebel`](https://github.com/reasonml/rebel), which is built on [`jenga`](https://github.com/janestreet/jenga). It is an early work in progress, but you can also try it out via [`RebelExampleProject`](https://github.com/reasonml/RebelExampleProject). `rebel`  currently takes a long time to compile the first time it's used, so for getting started quickly, use [`ReasonProject`](https://reasonml.github.io/ReasonProject/) instead.\n\n`rebel` features:\n\n- Easy to use [`bucklescript`](https://github.com/bloomberg/bucklescript) integration.\n- Easy to use [`js_of_ocaml`](https://github.com/ocsigen/js_of_ocaml) integration.\n- Automatic namespacing based on your `package.json` package name.\n- Automatic generation of `.merlin` files.\n- Powered by `jenga`, a fast, parallel, recoverable build system.\n- Uses modern compiler features such as \"module aliases\" for faster compilation of projects.\n\n\nInstalling via OPAM\n-------------------\n\nThe OPAM installation doesn't use the isolated directory based sandbox model that `ExampleProject` does, but if you are very familiar with `opam`, you should be able to work out conflicts in the global switch, or create a new switch for the purpose of using `Reason`.\n\n\n```sh\n# On OSX, install opam via Homebrew:\nbrew update\nbrew install opam\n# On Linux, see here (you will need opam >= 1.2.2): http://opam.ocaml.org/doc/Install.html\n\nopam init\n# Add this to your ~/.bashrc (or ~/.zshrc):\n#   eval $(opam config env)\n\nopam update\nopam switch 4.02.3\neval $(opam config env)\nopam install reason\n```\n\n#### Testing OPAM installation.\n\nTest the installation by compiling the following program:\n\n\n```sh\necho 'print_string \"Hello world\"' > Hello.re\n\nrebuild Hello.native # Automatically generates Hello.native from Hello.re\n\n./Hello.native\n\n```\n\nGet Started Now\n---------------\nCheck out the [docs](http://facebook.github.io/reason) which guide you through the basic syntax and toolchain features.\n\nContribute back to that documentation in the [docs folder](https://github.com/facebook/reason/tree/master/docs).\n\n\nCommunity\n---------------\nGet in touch! We're on IRC freenode #reasonml, and [Discord](https://discord.gg/reasonml).\n\nContributing To Development\n----------\n```\n# On OSX, install opam via Homebrew:\nbrew update\nbrew install opam\n# On Linux, see here (you will need opam >= 1.2.2): http://opam.ocaml.org/doc/Install.html\n\nopam init\n# Add this to your ~/.bashrc (or ~/.zshrc):\n#   eval $(opam config env)\n\nopam update\nopam switch 4.03.0\neval $(opam config env)\ngit clone git@github.com:facebook/reason.git\ncd reason\nopam pin add -y reason-parser reason-parser\nopam pin add -y reason .\n```\n\n**Note**: during the last `opam pin` step, make sure your local repo is clean. In particular, remove artifacts and `node_modules`. Otherwise the pinning might go stale or stall due to the big `node_modules`.\n\nLicense\n-------\n\nSee Reason license in [LICENSE.txt](LICENSE.txt).\n\nWorks that are forked from other projects are under their original licenses.\n\nEditor plugins (which have also been forked) in the `editorSupport/` directory\ninclude their own licenses.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/facebook/reason.git"
  },
  "scripts": {
    "clean": "eval $(dependencyEnv) && nopam && make clean",
    "editor": "eval $(dependencyEnv) && eval $EDITOR",
    "env": "eval $(dependencyEnv) && env",
    "formatTest": "eval $(dependencyEnv) && cd formatTest; ./test.sh",
    "postinstall": "eval $(dependencyEnv) && nopam && ./pkg/substs pkg/META.in && make precompile && ./build.native build --native true --native-dynlink true --utop ${utop_installed:-false} && (opam-installer --prefix=$opam_prefix || true)",
    "whereisrefmt": "eval $(dependencyEnv) && which refmt"
  },
  "version": "1.13.0"
}
